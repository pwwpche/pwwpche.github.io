<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PWWPCHE</title>
    <description>No description here</description>
    <link>https://github.com/pwwpche/</link>
    <atom:link href="https://github.com/pwwpche/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 13 Jul 2015 16:00:12 +0800</pubDate>
    <lastBuildDate>Mon, 13 Jul 2015 16:00:12 +0800</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      
      <item>
        <title>Daily Report - 7.13</title>
        <description>&lt;h3&gt;完成的任务&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;上午看了两个FindBugs3的Detector，总结了一点获取参数、方法名等的方法。&lt;/li&gt;
&lt;li&gt;中午酱油again&lt;/li&gt;
&lt;li&gt;下午找了找scala bytecode的文章，大部分太短没什么用，有个比较长的，150多页，而且一堆公式，感觉会爆炸&lt;/li&gt;
&lt;li&gt;傍晚看了点XFindBugs的源码，大部分都挺简单，但是看懂的话需要AspectJ生成bytecode的知识，所以不少没看懂&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;需要做的&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;继续看FindBugs和XFindBugs的bug detector源码&lt;/li&gt;
&lt;li&gt;看下Compiling Scala for the JVM是否有用&lt;/li&gt;
&lt;li&gt;看INSANE，开始写起来自己的CFG&lt;/li&gt;
&lt;li&gt;感觉Scala生成Bytecode需要自己动手javap，明天试一下。&lt;/li&gt;
&lt;/ul&gt;
</description>
        
          <description>&lt;h3&gt;完成的任务&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;上午看了两个FindBugs3的Detector，总结了一点获取参数、方法名等的方法。&lt;/li&gt;
&lt;li&gt;中午酱油again&lt;/li&gt;
&lt;li&gt;下午找了找scala bytecode的文章，大部分太短没什么用，有个比较长的，150多页，而且一堆公式，感觉会爆炸&lt;/li&gt;
&lt;li&gt;傍晚看了点XFindBugs的源码，大部分都挺简单，但是看懂的话需要AspectJ生成bytecode的知识，所以不少没看懂&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;需要做的&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;继续看FindBugs和XFindBugs的bug detector源码&lt;/li&gt;
&lt;li&gt;看下Compiling Scala for the JVM是否有用&lt;/li&gt;
&lt;li&gt;看INSANE，开始写起来自己的CFG&lt;/li&gt;
&lt;li&gt;感觉Scala生成Bytecode需要自己动手javap，明天试一下。&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Mon, 13 Jul 2015 00:00:00 +0800</pubDate>
        <link>https://github.com/pwwpche/blog/b.Daily%20Report%20-%207.13/</link>
        <guid isPermaLink="true">https://github.com/pwwpche/blog/b.Daily%20Report%20-%207.13/</guid>
        
        <category>Lab</category>
        
        <category>Report</category>
        
        
      </item>
      
    
      
      <item>
        <title>Some understandings about Detectors in FindBugs	</title>
        <description>&lt;h4&gt;Detector Workflow:&lt;/h4&gt;

&lt;p&gt;visit(JavaClass)
    visit(Method)
        visit(Code)
            sawCode(int)
visitAfter(JavaClass)&lt;/p&gt;

&lt;h4&gt;TOS:&lt;/h4&gt;

&lt;p&gt;Top Of Stack&lt;/p&gt;

&lt;h4&gt;Detectors&lt;/h4&gt;

&lt;h5&gt;CloneIdiom :&lt;/h5&gt;

&lt;p&gt;Line 158, redundent if comparement, but this is not bug.&lt;br&gt;
get current class name and params
    &amp;quot;clone&amp;quot;.equals(getMethodName())
    getMethodSig().startsWith(&amp;quot;()&amp;quot;)
get subclass
    subtypes2.isSubtype(getClassDescriptor(), cloneDescriptor)
get class interface
    String[] interface&lt;em&gt;names = obj.getInterfaceNames();
     for (String interface&lt;/em&gt;name : interface&lt;em&gt;names) {
        if (&amp;quot;java.lang.Cloneable&amp;quot;.equals(interface&lt;/em&gt;name)) {}
    }&lt;/p&gt;

&lt;p&gt;get call method and params:
    seen == INVOKESPECIAL &amp;amp;&amp;amp; &amp;quot;java/util/HashMap&amp;quot;.equals(getClassConstantOperand()) &amp;amp;&amp;amp; 
        &amp;quot;clone&amp;quot;.equals(getNameConstantOperand()) &amp;amp;&amp;amp; 
        &amp;quot;([BII)V&amp;quot;.equals(getMethodDescriptorOperand().getSignature())
    =&amp;gt;void HashMap.clone(Byte[] , int, int)&lt;/p&gt;

&lt;h5&gt;BadUseOfReturnValue :&lt;/h5&gt;

&lt;p&gt;&amp;quot;()Ljava/lang/String;&amp;quot; ==&amp;gt; String f();&lt;br&gt;
&amp;quot;(ILjava/lang/Class;)J&amp;quot; ==&amp;gt; long f(int i, Class c);&lt;br&gt;
&amp;quot;([B)V&amp;quot; ==&amp;gt; void String(byte[] bytes);&lt;br&gt;
Reference: JNI Type Signatures(https://docs.oracle.com/javase/1.5.0/docs/guide/jni/spec/types.html)&lt;/p&gt;

&lt;h5&gt;DumbMethod&lt;/h5&gt;

&lt;ul&gt;
&lt;li&gt;What is @SuppressedWarnings?
get stack value
 Item lengthArg = stack.getStackItem(0);
 if(lengthArg instanceOf Number){}
 ()&lt;/li&gt;
&lt;/ul&gt;

&lt;h5&gt;DroppedException&lt;/h5&gt;

&lt;p&gt;get exception table
    obj.getExceptionTable()&lt;/p&gt;

&lt;h5&gt;AJTestInfiniteLoop&lt;/h5&gt;

&lt;p&gt;test whether the call has infinite loop
    cg.hasCircle(method,method)&lt;/p&gt;

&lt;h5&gt;AJTestAdviceScope&lt;/h5&gt;

&lt;p&gt;get arguments count
    this.getMethod().getArgumentTypes().length&lt;/p&gt;

&lt;h5&gt;AJTestMultipleClassDeclaration&lt;/h5&gt;

&lt;p&gt;Not quite sure what is he doing...&lt;/p&gt;
</description>
        
          <description>&lt;h4&gt;Detector Workflow:&lt;/h4&gt;

&lt;p&gt;visit(JavaClass)
    visit(Method)
        visit(Code)
            sawCode(int)
visitAfter(JavaClass)&lt;/p&gt;
</description>
        
        <pubDate>Mon, 13 Jul 2015 00:00:00 +0800</pubDate>
        <link>https://github.com/pwwpche/blog/a.%20Some%20understandings%20about%20Detectors/</link>
        <guid isPermaLink="true">https://github.com/pwwpche/blog/a.%20Some%20understandings%20about%20Detectors/</guid>
        
        <category>Lab</category>
        
        <category>FindBugs</category>
        
        
      </item>
      
    
      
      <item>
        <title>Daily Report - 7.10</title>
        <description>&lt;h3&gt;完成的任务&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;上午先重读了一边FindBugs和XFindBugs的论文BugPattern部分，这次读懂的多了些&lt;/li&gt;
&lt;li&gt;中午出去了&lt;/li&gt;
&lt;li&gt;下午跑了一个FindBugs3的plugin,照着教程写出来了，也能加载了&lt;/li&gt;
&lt;li&gt;傍晚看了一下如何自己写FindBugs的plugin的文章，感觉似乎不是很难...好多东西FindBugs的框架都搭好了&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;需要做的&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;看20个FindBugs自己的bug detector源码，也看下XFindBugs的源码，熟悉一下FindBugs里面都是怎么用detector，怎么检验bytecode的&lt;/li&gt;
&lt;li&gt;找几篇关于scala bytecode 的文章读一下&lt;/li&gt;
&lt;li&gt;着手准备看scala bugpattern，先到StackOverflow上和Scala Issue Tracker上找一些bug的描述&lt;/li&gt;
&lt;li&gt;看INSANE，开始写起来自己的CFG&lt;/li&gt;
&lt;/ul&gt;
</description>
        
          <description>&lt;h3&gt;完成的任务&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;上午先重读了一边FindBugs和XFindBugs的论文BugPattern部分，这次读懂的多了些&lt;/li&gt;
&lt;li&gt;中午出去了&lt;/li&gt;
&lt;li&gt;下午跑了一个FindBugs3的plugin,照着教程写出来了，也能加载了&lt;/li&gt;
&lt;li&gt;傍晚看了一下如何自己写FindBugs的plugin的文章，感觉似乎不是很难...好多东西FindBugs的框架都搭好了&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;需要做的&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;看20个FindBugs自己的bug detector源码，也看下XFindBugs的源码，熟悉一下FindBugs里面都是怎么用detector，怎么检验bytecode的&lt;/li&gt;
&lt;li&gt;找几篇关于scala bytecode 的文章读一下&lt;/li&gt;
&lt;li&gt;着手准备看scala bugpattern，先到StackOverflow上和Scala Issue Tracker上找一些bug的描述&lt;/li&gt;
&lt;li&gt;看INSANE，开始写起来自己的CFG&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Fri, 10 Jul 2015 00:00:00 +0800</pubDate>
        <link>https://github.com/pwwpche/blog/c.Daily%20Report%20-%207.10/</link>
        <guid isPermaLink="true">https://github.com/pwwpche/blog/c.Daily%20Report%20-%207.10/</guid>
        
        <category>Lab</category>
        
        <category>Report</category>
        
        
      </item>
      
    
      
      <item>
        <title>Use plugin to add detector to FindBugs</title>
        <description>&lt;p&gt;Tutorial here:&lt;br&gt;
https://code.google.com/p/findbugs/wiki/DetectorPluginTutorial&lt;/p&gt;

&lt;p&gt;Well, the directory in which the plugins should be placed isn&amp;#39;t clear. &lt;/p&gt;

&lt;p&gt;Spectate code here[in &amp;quot;edu.umd.cs.findbugs.PluginLoader&amp;quot;]:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;installStandardPlugins&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;homeDir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DetectorFactoryCollection&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getFindBugsHome&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;homeDir&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;home&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;homeDir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;loadPlugins&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;home&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Add a breakpoint at line2, and make sure what is the directory that FindBugs is searching in. &lt;/p&gt;
</description>
        
          <description>&lt;p&gt;Tutorial here:&lt;br&gt;
https://code.google.com/p/findbugs/wiki/DetectorPluginTutorial&lt;/p&gt;
</description>
        
        <pubDate>Fri, 10 Jul 2015 00:00:00 +0800</pubDate>
        <link>https://github.com/pwwpche/blog/b.Use%20plugin%20to%20add%20detectors%20to%20FindBugs/</link>
        <guid isPermaLink="true">https://github.com/pwwpche/blog/b.Use%20plugin%20to%20add%20detectors%20to%20FindBugs/</guid>
        
        <category>Lab</category>
        
        <category>FindBugs</category>
        
        
      </item>
      
    
      
      <item>
        <title>TODO List - 7.10</title>
        <description>&lt;ol&gt;
&lt;li&gt;熟悉FindBugs加插件的方法(In Progress)&lt;/li&gt;
&lt;li&gt;熟悉Scala，可以写写今年软工方向程序优化的大作业&lt;/li&gt;
&lt;li&gt;Scala字节码，可能需要熟悉BCEL&lt;/li&gt;
&lt;li&gt;Scala BugPattern(非常重要),靠StackOverflow, Scala Issue Tracker, ...&lt;br&gt;
分析具体的程序(老师给的源码)，这部分时间最长&lt;br&gt;
要注意False Positive的问题，FindBugs3里面有Suppressor，看看怎么用&lt;/li&gt;
&lt;li&gt;写代码，这都是后面的事了&lt;/li&gt;
&lt;/ol&gt;
</description>
        
          <description>&lt;ol&gt;
&lt;li&gt;熟悉FindBugs加插件的方法(In Progress)&lt;/li&gt;
&lt;li&gt;熟悉Scala，可以写写今年软工方向程序优化的大作业&lt;/li&gt;
&lt;li&gt;Scala字节码，可能需要熟悉BCEL&lt;/li&gt;
&lt;li&gt;Scala BugPattern(非常重要),靠StackOverflow, Scala Issue Tracker, ...&lt;br&gt;
分析具体的程序(老师给的源码)，这部分时间最长&lt;br&gt;
要注意False Positive的问题，FindBugs3里面有Suppressor，看看怎么用&lt;/li&gt;
&lt;li&gt;写代码，这都是后面的事了&lt;/li&gt;
&lt;/ol&gt;
</description>
        
        <pubDate>Fri, 10 Jul 2015 00:00:00 +0800</pubDate>
        <link>https://github.com/pwwpche/blog/a.TODO%20List%20-%207.10/</link>
        <guid isPermaLink="true">https://github.com/pwwpche/blog/a.TODO%20List%20-%207.10/</guid>
        
        <category>Lab</category>
        
        
      </item>
      
    
      
      <item>
        <title>Daily Report - 7.9</title>
        <description>&lt;h3&gt;完成的任务&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;上午解决了昨天的一个问题，BetterVisitor调用DismantleByteCode的过程弄清楚了&lt;/li&gt;
&lt;li&gt;中午困困困&lt;/li&gt;
&lt;li&gt;下午先粗看了一边FindBugs的论文，没有多大收获&lt;/li&gt;
&lt;li&gt;又整理了一遍FindBugs的运行流程，跑了一个EQUAL&lt;em&gt;NO&lt;/em&gt;HASHCODE的例子，感觉比昨天更清楚它的架构了&lt;/li&gt;
&lt;li&gt;傍晚看了一下XFindBugs的论文，顺便找到了学长的XFindBugs源码，感觉工作量似乎没有那么大，不排除这是个flag&lt;/li&gt;
&lt;li&gt;不需要自己实现FindBugs架构了，太复杂而且没意义，FindBugs自己支持Plugin扩展&lt;/li&gt;
&lt;li&gt;MB今天效率有点低&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;需要做的&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;重读FindBugs和XFindBugs对于BugPattern部分的说明，这个在后面会是重点要解决的问题&lt;/li&gt;
&lt;li&gt;自己写一个小Plugin，放到FindBugs 3.0里面跑起来&lt;/li&gt;
&lt;li&gt;是否需要理解Java JVM和ByteCode？因为现在对这一部分完全不了解，可以看看FindBugs原先的Detector都是怎么做的。&lt;/li&gt;
&lt;/ul&gt;
</description>
        
          <description>&lt;h3&gt;完成的任务&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;上午解决了昨天的一个问题，BetterVisitor调用DismantleByteCode的过程弄清楚了&lt;/li&gt;
&lt;li&gt;中午困困困&lt;/li&gt;
&lt;li&gt;下午先粗看了一边FindBugs的论文，没有多大收获&lt;/li&gt;
&lt;li&gt;又整理了一遍FindBugs的运行流程，跑了一个EQUAL&lt;em&gt;NO&lt;/em&gt;HASHCODE的例子，感觉比昨天更清楚它的架构了&lt;/li&gt;
&lt;li&gt;傍晚看了一下XFindBugs的论文，顺便找到了学长的XFindBugs源码，感觉工作量似乎没有那么大，不排除这是个flag&lt;/li&gt;
&lt;li&gt;不需要自己实现FindBugs架构了，太复杂而且没意义，FindBugs自己支持Plugin扩展&lt;/li&gt;
&lt;li&gt;MB今天效率有点低&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;需要做的&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;重读FindBugs和XFindBugs对于BugPattern部分的说明，这个在后面会是重点要解决的问题&lt;/li&gt;
&lt;li&gt;自己写一个小Plugin，放到FindBugs 3.0里面跑起来&lt;/li&gt;
&lt;li&gt;是否需要理解Java JVM和ByteCode？因为现在对这一部分完全不了解，可以看看FindBugs原先的Detector都是怎么做的。&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Thu, 09 Jul 2015 00:00:00 +0800</pubDate>
        <link>https://github.com/pwwpche/blog/b.Daily%20Report%20-%207.9%20-%20Copy%20-%20Copy/</link>
        <guid isPermaLink="true">https://github.com/pwwpche/blog/b.Daily%20Report%20-%207.9%20-%20Copy%20-%20Copy/</guid>
        
        <category>Lab</category>
        
        <category>Report</category>
        
        
      </item>
      
    
      
      <item>
        <title>Some Interesting Visiting order of FindBugs 0.5.2</title>
        <description>&lt;h3&gt;This is the answer to the question yesterday.&lt;/h3&gt;

&lt;p&gt;FindBugs has a really complex program structure...much more complex than any program I&amp;#39;ve ever wrote (to be honest, I&amp;#39;ve not written too much code LOL).&lt;/p&gt;

&lt;h4&gt;Here is the architecture:&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;BytecodeScanningDetector.visitClassContext()&lt;/li&gt;
&lt;li&gt;-&amp;gt; JavaClass.accept(Visitor v) [1]&lt;/li&gt;
&lt;li&gt;-&amp;gt; PreorderVisitor.visitJavaClass(JavaClass obj)[2]&lt;/li&gt;
&lt;li&gt;-&amp;gt; Code.accept(Visitor v)&lt;/li&gt;
&lt;li&gt;-&amp;gt; PreorderVisitor.visitCode(Code obj)&lt;/li&gt;
&lt;li&gt;-&amp;gt; BetterVisitor.visitCode(Code obj)&lt;/li&gt;
&lt;li&gt;-&amp;gt; DismantleByteCode.visit(Code obj)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;[1]Visitor v is of class edu.umd.cs.findbugs.FindSpinLoop&lt;br&gt;
FindSpinLoop(contains no visitJavaClass()) extends 
=&amp;gt;BytecodeScanningDetector(contains no visitJavaClass())  extends
=&amp;gt;=&amp;gt;DismantleBytecode(contains no visitJavaClass())  extends 
=&amp;gt;=&amp;gt;=&amp;gt;PreorderVisitor(contains visitJavaClass()) 
so, moving through the chain of extends, we can finally approach the visitJavaClass() method. &lt;/p&gt;

&lt;p&gt;[2] Assume that we are visiting some Code&lt;/p&gt;

&lt;h4&gt;[3]Hmmm...This is interesting...&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Remember that Code.accept() called visitCode(), which FindSpinLoop doesn&amp;#39;t have, and which PreorderVisitor does have. &lt;/li&gt;
&lt;li&gt;But PreorderVisitor called super.visitCode(), and its super class, BetterVisitor, called visit(Code obj), which both BetterVisitor and FindSpinLoop have. &lt;/li&gt;
&lt;li&gt;In this situation, Java decides that the most concrete class, FindSpinLoop, should be called. &lt;/li&gt;
&lt;li&gt;FindSpinLoop called super.visit(Code obj), which BytecodeScanningDetector doesn&amp;#39;t have, and DismantleByteCode has. &lt;/li&gt;
&lt;li&gt;So finally, DismantleByteCode.visit(Code obj) is called. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;What a lovely structure...I&amp;#39;m not serious...And here is a simple code snippet to illustrate this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;kp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MyInterface&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;me&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AbstractTest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MyInterface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;me&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;no&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;me in abstractTest&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;me2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;me2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;no&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;me2&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ConcreteTest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;AbstractTest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;me3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;no&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Concrete Me3()&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;me2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
        &lt;span class=&quot;no&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Concrete Me2()&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MyTest&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;no&quot;&gt;ConcreteTest&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ConcreteTest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;testing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;testing&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;MyInterface&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myInterface&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;myInterface&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;me&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Result of the program:&lt;br&gt;
me in abstractTest&lt;br&gt;
Concrete Me2()&lt;/p&gt;
</description>
        
          <description>&lt;h3&gt;This is the answer to the question yesterday.&lt;/h3&gt;

&lt;p&gt;FindBugs has a really complex program structure...much more complex than any program I&amp;#39;ve ever wrote (to be honest, I&amp;#39;ve not written too much code LOL).&lt;/p&gt;
</description>
        
        <pubDate>Thu, 09 Jul 2015 00:00:00 +0800</pubDate>
        <link>https://github.com/pwwpche/blog/a.Some%20Interesting%20Visiting%20order%20of%20FindBugs%200.5.2%20-%20Copy/</link>
        <guid isPermaLink="true">https://github.com/pwwpche/blog/a.Some%20Interesting%20Visiting%20order%20of%20FindBugs%200.5.2%20-%20Copy/</guid>
        
        <category>Lab</category>
        
        <category>FindBugs</category>
        
        
      </item>
      
    
      
      <item>
        <title>Daily Report - 7.8</title>
        <description>&lt;h3&gt;完成的任务&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;上午看了一下BCEL的一个example的源码，大概搞懂了如何用BCEL创建一个java class&lt;/li&gt;
&lt;li&gt;顺便理解了new后为什么要有dup，但是没完全搞懂&lt;/li&gt;
&lt;li&gt;中午打酱油&lt;/li&gt;
&lt;li&gt;下午把FindBugs 3.0的源码跑起来了，学长提醒说旧版和新版架构可能有很大差别，建议看新版。粗看了一下架构区别不是很大，还是用了Visitor模式。需要以后再确定一下&lt;/li&gt;
&lt;li&gt;傍晚自己写了一个最简单的java程序，javap -c 反汇编后看了一下，照着写出了BCEL生成相应java class的程序，跑起来了。&lt;/li&gt;
&lt;li&gt;临走前发现一个问题。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;需要做的&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;可以开始尝试搭一个简单的FindBugs架构了？（问题是现在还没学如何利用FindBugs的Visitor机制）&lt;/li&gt;
&lt;li&gt;所以要学学Visitor机制&lt;/li&gt;
&lt;li&gt;重看FindBugs论文和XFindBugs论文&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;问题&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;JVM的运行机制，栈上的东西是用完了自动pop吗？为何要先dup再invokeVirtual？  （Possible Explanation:http://stackoverflow.com/questions/12438567/java-bytecode-dup）&lt;/li&gt;
&lt;li&gt;BCEL的Visitor机制是怎么用的？什么时候要用visitor模式？&lt;/li&gt;
&lt;li&gt;JVM的操作数栈和局部变量栈是如何协同工作的？&lt;/li&gt;
&lt;li&gt;为何FindBugs里面BetterVisitor直接跳到了DismantleByteCode?&lt;/li&gt;
&lt;/ul&gt;
</description>
        
          <description>&lt;h3&gt;完成的任务&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;上午看了一下BCEL的一个example的源码，大概搞懂了如何用BCEL创建一个java class&lt;/li&gt;
&lt;li&gt;顺便理解了new后为什么要有dup，但是没完全搞懂&lt;/li&gt;
&lt;li&gt;中午打酱油&lt;/li&gt;
&lt;li&gt;下午把FindBugs 3.0的源码跑起来了，学长提醒说旧版和新版架构可能有很大差别，建议看新版。粗看了一下架构区别不是很大，还是用了Visitor模式。需要以后再确定一下&lt;/li&gt;
&lt;li&gt;傍晚自己写了一个最简单的java程序，javap -c 反汇编后看了一下，照着写出了BCEL生成相应java class的程序，跑起来了。&lt;/li&gt;
&lt;li&gt;临走前发现一个问题。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;需要做的&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;可以开始尝试搭一个简单的FindBugs架构了？（问题是现在还没学如何利用FindBugs的Visitor机制）&lt;/li&gt;
&lt;li&gt;所以要学学Visitor机制&lt;/li&gt;
&lt;li&gt;重看FindBugs论文和XFindBugs论文&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Wed, 08 Jul 2015 00:00:00 +0800</pubDate>
        <link>https://github.com/pwwpche/blog/c.Daily%20Report%20-%207.8/</link>
        <guid isPermaLink="true">https://github.com/pwwpche/blog/c.Daily%20Report%20-%207.8/</guid>
        
        <category>Lab</category>
        
        <category>Report</category>
        
        
      </item>
      
    
      
      <item>
        <title>Rough program logic of FindBugs 0.5.2</title>
        <description>&lt;h3&gt;Rough running sequence of FindBugs 0.5.2:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;FindBugs.examineClass()&lt;/li&gt;
&lt;li&gt;BytecodeScanningDetector.visitClassContext()&lt;/li&gt;
&lt;li&gt;JavaClass.accept()&lt;/li&gt;
&lt;li&gt;PreorderVisitor.visitJavaClass()&lt;/li&gt;
&lt;li&gt;PreorderVisitor.visitMethod()&lt;/li&gt;
&lt;li&gt;PreorderVisitor.visitCode()&lt;/li&gt;
&lt;li&gt;BetterVisitor.visitCode()&lt;/li&gt;
&lt;li&gt;DismantleBytecode.visit()&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;More Question:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Why BetterVisitor can call DismantleByteCode?&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Posible explanation&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;DismantleByteCode extends BetterVisitor&lt;/li&gt;
&lt;li&gt;DismantleByteCode is abstract&lt;/li&gt;
&lt;li&gt;Or, explanation is not hiding here(in extend and abstract)?
(Maybe refer to BCEL manual, PDF highlighted part)&lt;/li&gt;
&lt;/ul&gt;
</description>
        
          <description>&lt;h3&gt;Rough running sequence of FindBugs 0.5.2:&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;FindBugs.examineClass()&lt;/li&gt;
&lt;li&gt;BytecodeScanningDetector.visitClassContext()&lt;/li&gt;
&lt;li&gt;JavaClass.accept()&lt;/li&gt;
&lt;li&gt;PreorderVisitor.visitJavaClass()&lt;/li&gt;
&lt;li&gt;PreorderVisitor.visitMethod()&lt;/li&gt;
&lt;li&gt;PreorderVisitor.visitCode()&lt;/li&gt;
&lt;li&gt;BetterVisitor.visitCode()&lt;/li&gt;
&lt;li&gt;DismantleBytecode.visit()&lt;/li&gt;
&lt;/ul&gt;
</description>
        
        <pubDate>Wed, 08 Jul 2015 00:00:00 +0800</pubDate>
        <link>https://github.com/pwwpche/blog/b.FindBugs%20Structure/</link>
        <guid isPermaLink="true">https://github.com/pwwpche/blog/b.FindBugs%20Structure/</guid>
        
        <category>Lab</category>
        
        <category>FindBugs</category>
        
        
      </item>
      
    
      
      <item>
        <title>Visitor Pattern</title>
        <description>&lt;h2&gt;Components&lt;/h2&gt;

&lt;h3&gt;Utility&lt;/h3&gt;

&lt;dl&gt;
  &lt;dt&gt;-Controller&lt;/dt&gt;
  &lt;dd&gt;* Provide method for visitors&lt;/dd&gt;
  &lt;dt&gt;-Visitor&lt;/dt&gt;
  &lt;dd&gt;* Provide interface to all visiting methods&lt;/dd&gt;
  
  &lt;dt&gt;-VisitorImpl&lt;/dt&gt;
  &lt;dd&gt;* Define visiting methods to different element
as well as what visitor will do with this element&lt;/dd&gt;
&lt;/dl&gt;
                    

&lt;h3&gt;Data Type:&lt;/h3&gt;

&lt;dl&gt;
    &lt;dt&gt;-Element&lt;/dt&gt;
    &lt;dt&gt;-ElementImpl&lt;/dt&gt;
    &lt;dd&gt;* Just accept visit from visitor of the base class&lt;/dd&gt;
&lt;/dl&gt;

&lt;h2&gt;Program Sequence&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;main(): controller.showTo(visitorImpl)&lt;/li&gt;
&lt;li&gt;controller.showTo(): element.accept(visitor)&lt;/li&gt;
&lt;li&gt;_sys: get element type&lt;/li&gt;
&lt;li&gt;elementImpl.accept(): visitor.visit(this)&lt;/li&gt;
&lt;li&gt;sysget: visitor type&lt;/li&gt;
&lt;li&gt;visitor.visit(): visitor.visit(ElementImpl element)&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;Code:&lt;/h2&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ICarElementVisitor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;visit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Wheel&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wheel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;visit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Engine&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;engine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;visit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Body&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;visit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Car&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;car&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ICarElement&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;accept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ICarElementVisitor&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;visitor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Wheel&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ICarElement&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Wheel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;accept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ICarElementVisitor&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;visitor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;cm&quot;&gt;/*&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;         * accept(ICarElementVisitor) in Wheel implements&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;         * accept(ICarElementVisitor) in ICarElement, so the call&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;         * to accept is bound at run time. This can be considered&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;         * the first dispatch. However, the decision to call&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;         * visit(Wheel) (as opposed to visit(Engine) etc.) can be&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;         * made during compile time since &amp;#39;this&amp;#39; is known at compile&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;         * time to be a Wheel. Moreover, each implementation of&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;         * ICarElementVisitor implements the visit(Wheel), which is&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;         * another decision that is made at run time. This can be&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;         * considered the second dispatch.&lt;/span&gt;
&lt;span class=&quot;cm&quot;&gt;         */&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;visitor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;visit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Engine&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ICarElement&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;accept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ICarElementVisitor&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;visitor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;visitor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;visit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Body&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ICarElement&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;accept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ICarElementVisitor&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;visitor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;visitor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;visit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Car&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ICarElement&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ICarElement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elements&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Car&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;elements&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ICarElement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Wheel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;front left&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Wheel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;front right&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Wheel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;back left&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Wheel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;back right&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Engine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;};&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;accept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ICarElementVisitor&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;visitor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;    
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ICarElement&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elem&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elements&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;elem&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;accept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;visitor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;visitor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;visit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;    
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CarElementPrintVisitor&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ICarElementVisitor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;visit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Wheel&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wheel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;      
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Visiting &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wheel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot; wheel&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;visit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Engine&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;engine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Visiting engine&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;visit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Body&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Visiting body&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
 
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;visit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Car&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;car&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;      
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Visiting car&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CarElementDoVisitor&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ICarElementVisitor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;visit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Wheel&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wheel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Kicking my &amp;quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wheel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&amp;quot; wheel&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;visit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Engine&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;engine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Starting my engine&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;visit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Body&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Moving my body&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;visit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Car&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;car&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;System&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;Starting my car&amp;quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;VisitorDemo&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ICarElement&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;car&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Car&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;car&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;accept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;CarElementPrintVisitor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;car&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;accept&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;CarElementDoVisitor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
        
          <description>&lt;h2&gt;Components&lt;/h2&gt;

&lt;h3&gt;Utility&lt;/h3&gt;

&lt;dl&gt;
  &lt;dt&gt;-Controller&lt;/dt&gt;
  &lt;dd&gt;* Provide method for visitors&lt;/dd&gt;
  &lt;dt&gt;-Visitor&lt;/dt&gt;
  &lt;dd&gt;* Provide interface to all visiting methods&lt;/dd&gt;
  
  &lt;dt&gt;-VisitorImpl&lt;/dt&gt;
  &lt;dd&gt;* Define visiting methods to different element
as well as what visitor will do with this element&lt;/dd&gt;
&lt;/dl&gt;
                    

&lt;h3&gt;Data Type:&lt;/h3&gt;

&lt;dl&gt;
    &lt;dt&gt;-Element&lt;/dt&gt;
    &lt;dt&gt;-ElementImpl&lt;/dt&gt;
    &lt;dd&gt;* Just accept visit from visitor of the base class&lt;/dd&gt;
&lt;/dl&gt;
</description>
        
        <pubDate>Wed, 08 Jul 2015 00:00:00 +0800</pubDate>
        <link>https://github.com/pwwpche/blog/a.Visitor%20Pattern/</link>
        <guid isPermaLink="true">https://github.com/pwwpche/blog/a.Visitor%20Pattern/</guid>
        
        <category>Lab</category>
        
        <category>Visitor</category>
        
        
      </item>
      
    
  </channel>
</rss>
